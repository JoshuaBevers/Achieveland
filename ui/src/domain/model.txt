openapi: "3.0.0"
info:
  version: 0.1.0
  title: Achieve
  description: Achievement Claiming for boardgames
  contact:
    name: Josh
    url: achieveland.net
servers:
  - url: https://{hostname}/api
    variables:
      hostname:
        default: localhost
security:
  - bearerAuth: [ ]
paths:
  /gamename:
    get:
      operationId: authTest
      responses:
        '200':
          description: grabs the game from the database based on the name
          content:
            application/json:
              schema:
                $ref: '#/routes/gamename'
  /todo:
    get:
      description: Get experiments for the authenticated user
      operationId: getExperimentsForAuthedUser
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Experiment'
    post:
      description: Create an experiment
      operationId: createExperiment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
  /experiments/{experimentID}:
    post:
      description: Update an experiment
      operationId: updateExperiment
      parameters:
        - name: experimentID
          in: path
          description: Experiment ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
    get:
      description: Get an Experiment By ID
      operationId: getExperimentByID
      parameters:
        - name: experimentID
          in: path
          description: Experiment ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        '404':
          description: Not Found
    delete:
      description: Delete an Experiment By ID
      operationId: deleteExperimentByID
      parameters:
        - name: experimentID
          in: path
          description: Experiment ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        '404':
          description: Not Found
  /experiments/{experimentID}/recipes:
    get:
      description: Gets recipes for an experiment
      operationId: getRecipesByExperiment
      parameters:
        - name: experimentID
          in: path
          description: Experiment ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        '404':
          description: Not Found
    post:
      description: Creates a recipe for an experiment
      operationId: createRecipe
      parameters:
        - name: experimentID
          in: path
          description: Experiment ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
  /recipes/{recipeID}:
    get:
      description: Gets a recipe
      operationId: getRecipe
      parameters:
        - name: recipeID
          in: path
          description: Experiment ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '404':
          description: Not Found
    delete:
      description: Delete a Recipe By ID
      operationId: deleteRecipe
      parameters:
        - name: recipeID
          in: path
          description: Experiment ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '404':
          description: Not Found
    put:
      description: Updates a recipe for an experiment
      operationId: updateRecipe
      parameters:
        - name: recipeID
          in: path
          description: Experiment ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
#  /experiments/users/{userId}/{experimentId}:
#    get:
#      security: [ ]
#      operationId: getUserExperimentById
#      parameters:
#        - name: userId
#          in: path
#          description: User ID
#          required: true
#          schema:
#            type: string
#        - name: experimentId
#          in: path
#          description: Experiment ID
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: todo
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Experiment'
#  /experiments/users/{userId}/{experimentId}/variations:
#    get:
#      security: [ ]
#      operationId: getUserVariationsByExperiment
#      parameters:
#        - name: userId
#          in: path
#          description: User ID
#          required: true
#          schema:
#            type: string
#        - name: experimentId
#          in: path
#          description: Experiment ID
#          required: true
#          schema:
#            type: string
#      responses:
#        '200':
#          description: todo
#          content:
#            application/json:
#              schema:
#                type: array
#                items:
#                  $ref: '#/components/schemas/Variation'
#  /users/current:
#    get:
#      operationId: getCurrentUser
#      responses:
#        '200':
#          description: todo
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/User'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - displayName
        - role
      properties:
        displayName:
          type: string
        role:
          type: string
    Experiment:
      type: object
      required:
        - id
        - name
        - createdAt
      properties:
        id:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
    Recipe:
      type: object
      required:
        - id
        - experimentId
        - createdAt
        - name
      properties:
        id:
          type: string
          readOnly: true
        experimentId:
          type: string
          readOnly: true
        createdAt:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/RecipeIngredient'
        steps:
          type: array
          items:
            type: string
        notes:
          type: array
          items:
            type: string
    RecipeIngredient:
      type: object
      required:
        - name
        - quantity
      properties:
        name:
          type: string
        quantity:
          type: string
    Healthz:
      type: object
      required:
        - status
      properties:
        status:
          type: string
    Error:
      type: object
      required:
        - slug
        - message
      properties:
        slug:
          type: string
        message:
          type: string
